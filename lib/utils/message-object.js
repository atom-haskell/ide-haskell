"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const highlight = require("atom-highlight");
function isTextMessage(msg) {
    return !!(msg && msg.text);
}
function isHTMLMessage(msg) {
    return !!(msg && msg.html);
}
class MessageObject {
    constructor(msg) {
        this.msg = msg;
    }
    static fromObject(message) {
        if (message instanceof MessageObject) {
            return message;
        }
        else {
            return new MessageObject(message);
        }
    }
    toHtml(linter = false) {
        if (this.htmlCache !== undefined) {
            return this.htmlCache;
        }
        if (isTextMessage(this.msg) && this.msg.highlighter) {
            const html = highlight({
                fileContents: this.msg.text,
                scopeName: this.msg.highlighter,
                nbsp: linter,
                lineDivs: linter,
            });
            if (html) {
                return this.htmlCache = html;
            }
            this.msg.highlighter = undefined;
            return this.toHtml();
        }
        else if (isHTMLMessage(this.msg)) {
            return this.htmlCache = this.msg.html;
        }
        else {
            let text;
            if (isTextMessage(this.msg)) {
                text = this.msg.text;
            }
            else {
                text = this.msg;
            }
            const div = document.createElement('div');
            div.innerText = text;
            return this.htmlCache = div.innerHTML;
        }
    }
    raw() {
        if (isTextMessage(this.msg)) {
            return this.msg.text;
        }
        else {
            return this.msg;
        }
    }
}
exports.MessageObject = MessageObject;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZS1vYmplY3QuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvdXRpbHMvbWVzc2FnZS1vYmplY3QudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSw0Q0FBNEM7QUFXNUMsdUJBQXdCLEdBQWE7SUFDbkMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDLEdBQUcsSUFBSyxHQUFvQixDQUFDLElBQUksQ0FBQyxDQUFBO0FBQzlDLENBQUM7QUFFRCx1QkFBd0IsR0FBYTtJQUNuQyxNQUFNLENBQUMsQ0FBQyxDQUFDLENBQUMsR0FBRyxJQUFLLEdBQW9CLENBQUMsSUFBSSxDQUFDLENBQUE7QUFDOUMsQ0FBQztBQUdEO0lBVUUsWUFBcUIsR0FBeUM7UUFBekMsUUFBRyxHQUFILEdBQUcsQ0FBc0M7SUFFOUQsQ0FBQztJQVhNLE1BQU0sQ0FBQyxVQUFVLENBQUUsT0FBaUI7UUFDekMsRUFBRSxDQUFDLENBQUMsT0FBTyxZQUFZLGFBQWEsQ0FBQyxDQUFDLENBQUM7WUFDckMsTUFBTSxDQUFDLE9BQU8sQ0FBQTtRQUNoQixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsSUFBSSxhQUFhLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDbkMsQ0FBQztJQUNILENBQUM7SUFPTSxNQUFNLENBQUUsU0FBa0IsS0FBSztRQUNwQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsU0FBUyxLQUFLLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQTtRQUFDLENBQUM7UUFDM0QsRUFBRSxDQUFDLENBQUMsYUFBYSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxJQUFJLENBQUMsR0FBRyxDQUFDLFdBQVcsQ0FBQyxDQUFDLENBQUM7WUFDcEQsTUFBTSxJQUFJLEdBQUcsU0FBUyxDQUFDO2dCQUNyQixZQUFZLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxJQUFJO2dCQUMzQixTQUFTLEVBQUUsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXO2dCQUMvQixJQUFJLEVBQUUsTUFBTTtnQkFDWixRQUFRLEVBQUUsTUFBTTthQUNqQixDQUFDLENBQUE7WUFDRixFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDO2dCQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtZQUFDLENBQUM7WUFFMUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxXQUFXLEdBQUcsU0FBUyxDQUFBO1lBQ2hDLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUE7UUFDdEIsQ0FBQztRQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztZQUNuQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQTtRQUN2QyxDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixJQUFJLElBQVksQ0FBQTtZQUNoQixFQUFFLENBQUMsQ0FBQyxhQUFhLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDNUIsSUFBSSxHQUFHLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFBO1lBQ3RCLENBQUM7WUFBQyxJQUFJLENBQUMsQ0FBQztnQkFDTixJQUFJLEdBQUcsSUFBSSxDQUFDLEdBQUcsQ0FBQTtZQUNqQixDQUFDO1lBQ0QsTUFBTSxHQUFHLEdBQUcsUUFBUSxDQUFDLGFBQWEsQ0FBQyxLQUFLLENBQUMsQ0FBQTtZQUN6QyxHQUFHLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtZQUNwQixNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsR0FBRyxHQUFHLENBQUMsU0FBUyxDQUFBO1FBQ3ZDLENBQUM7SUFDSCxDQUFDO0lBRU0sR0FBRztRQUNSLEVBQUUsQ0FBQyxDQUFDLGFBQWEsQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzVCLE1BQU0sQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQTtRQUN0QixDQUFDO1FBQUMsSUFBSSxDQUFDLENBQUM7WUFDTixNQUFNLENBQUMsSUFBSSxDQUFDLEdBQUcsQ0FBQTtRQUNqQixDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBakRELHNDQWlEQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBoaWdobGlnaHQgPSByZXF1aXJlKCdhdG9tLWhpZ2hsaWdodCcpXG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1lc3NhZ2VUZXh0IHtcbiAgdGV4dDogc3RyaW5nXG4gIGhpZ2hsaWdodGVyPzogc3RyaW5nXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1lc3NhZ2VIVE1MIHtcbiAgaHRtbDogc3RyaW5nXG59XG5cbmZ1bmN0aW9uIGlzVGV4dE1lc3NhZ2UgKG1zZzogVE1lc3NhZ2UpOiBtc2cgaXMgSU1lc3NhZ2VUZXh0IHtcbiAgcmV0dXJuICEhKG1zZyAmJiAobXNnIGFzIElNZXNzYWdlVGV4dCkudGV4dClcbn1cblxuZnVuY3Rpb24gaXNIVE1MTWVzc2FnZSAobXNnOiBUTWVzc2FnZSk6IG1zZyBpcyBJTWVzc2FnZUhUTUwge1xuICByZXR1cm4gISEobXNnICYmIChtc2cgYXMgSU1lc3NhZ2VIVE1MKS5odG1sKVxufVxuZXhwb3J0IHR5cGUgVE1lc3NhZ2UgPSBzdHJpbmcgfCBJTWVzc2FnZVRleHQgfCBJTWVzc2FnZUhUTUwgfCBNZXNzYWdlT2JqZWN0XG5cbmV4cG9ydCBjbGFzcyBNZXNzYWdlT2JqZWN0IHtcbiAgcHVibGljIHN0YXRpYyBmcm9tT2JqZWN0IChtZXNzYWdlOiBUTWVzc2FnZSk6IE1lc3NhZ2VPYmplY3QgIHtcbiAgICBpZiAobWVzc2FnZSBpbnN0YW5jZW9mIE1lc3NhZ2VPYmplY3QpIHtcbiAgICAgIHJldHVybiBtZXNzYWdlXG4gICAgfSBlbHNlIHtcbiAgICAgIHJldHVybiBuZXcgTWVzc2FnZU9iamVjdChtZXNzYWdlKVxuICAgIH1cbiAgfVxuXG4gIHByaXZhdGUgaHRtbENhY2hlPzogc3RyaW5nXG4gIGNvbnN0cnVjdG9yIChwcml2YXRlIG1zZzogc3RyaW5nIHwgSU1lc3NhZ2VUZXh0IHwgSU1lc3NhZ2VIVE1MKSB7XG4gICAgLy8gbm9vcFxuICB9XG5cbiAgcHVibGljIHRvSHRtbCAobGludGVyOiBib29sZWFuID0gZmFsc2UpOiBzdHJpbmcge1xuICAgIGlmICh0aGlzLmh0bWxDYWNoZSAhPT0gdW5kZWZpbmVkKSB7IHJldHVybiB0aGlzLmh0bWxDYWNoZSB9XG4gICAgaWYgKGlzVGV4dE1lc3NhZ2UodGhpcy5tc2cpICYmIHRoaXMubXNnLmhpZ2hsaWdodGVyKSB7XG4gICAgICBjb25zdCBodG1sID0gaGlnaGxpZ2h0KHtcbiAgICAgICAgZmlsZUNvbnRlbnRzOiB0aGlzLm1zZy50ZXh0LFxuICAgICAgICBzY29wZU5hbWU6IHRoaXMubXNnLmhpZ2hsaWdodGVyLFxuICAgICAgICBuYnNwOiBsaW50ZXIsXG4gICAgICAgIGxpbmVEaXZzOiBsaW50ZXIsXG4gICAgICB9KVxuICAgICAgaWYgKGh0bWwpIHsgcmV0dXJuIHRoaXMuaHRtbENhY2hlID0gaHRtbCB9XG5cbiAgICAgIHRoaXMubXNnLmhpZ2hsaWdodGVyID0gdW5kZWZpbmVkXG4gICAgICByZXR1cm4gdGhpcy50b0h0bWwoKVxuICAgIH0gZWxzZSBpZiAoaXNIVE1MTWVzc2FnZSh0aGlzLm1zZykpIHtcbiAgICAgIHJldHVybiB0aGlzLmh0bWxDYWNoZSA9IHRoaXMubXNnLmh0bWxcbiAgICB9IGVsc2Uge1xuICAgICAgbGV0IHRleHQ6IHN0cmluZ1xuICAgICAgaWYgKGlzVGV4dE1lc3NhZ2UodGhpcy5tc2cpKSB7XG4gICAgICAgIHRleHQgPSB0aGlzLm1zZy50ZXh0XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0ZXh0ID0gdGhpcy5tc2dcbiAgICAgIH1cbiAgICAgIGNvbnN0IGRpdiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpXG4gICAgICBkaXYuaW5uZXJUZXh0ID0gdGV4dFxuICAgICAgcmV0dXJuIHRoaXMuaHRtbENhY2hlID0gZGl2LmlubmVySFRNTFxuICAgIH1cbiAgfVxuXG4gIHB1YmxpYyByYXcgKCkge1xuICAgIGlmIChpc1RleHRNZXNzYWdlKHRoaXMubXNnKSkge1xuICAgICAgcmV0dXJuIHRoaXMubXNnLnRleHRcbiAgICB9IGVsc2Uge1xuICAgICAgcmV0dXJuIHRoaXMubXNnXG4gICAgfVxuICB9XG59XG4iXX0=