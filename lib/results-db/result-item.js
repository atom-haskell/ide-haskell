"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto_1 = require("crypto");
const atom_1 = require("atom");
const utils_1 = require("../utils");
class ResultItem {
    constructor(providerId, { uri, message, severity, position, context }) {
        this.providerId = providerId;
        this.uri = uri;
        this.message = utils_1.MessageObject.fromObject(message);
        this.severity = severity;
        this.position = position && atom_1.Point.fromObject(position);
        this.context = context;
        this._isValid = true;
    }
    isValid() {
        return this._isValid;
    }
    setValid(isValid) {
        this._isValid = isValid;
    }
    hash() {
        const h = crypto_1.createHash('md5');
        h.update(JSON.stringify({
            uri: this.uri, position: this.position && this.position.serialize(),
            message: this.message.raw(), severity: this.severity,
            context: this.context
        }));
        return h.digest('latin1');
    }
}
exports.ResultItem = ResultItem;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicmVzdWx0LWl0ZW0uanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvcmVzdWx0cy1kYi9yZXN1bHQtaXRlbS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLG1DQUFpQztBQUNqQywrQkFBMEI7QUFDMUIsb0NBQWdEO0FBYWhEO0lBT0UsWUFBNkIsVUFBa0IsRUFBRSxFQUFDLEdBQUcsRUFBRSxPQUFPLEVBQUUsUUFBUSxFQUFFLFFBQVEsRUFBRSxPQUFPLEVBQWM7UUFBNUUsZUFBVSxHQUFWLFVBQVUsQ0FBUTtRQUM3QyxJQUFJLENBQUMsR0FBRyxHQUFHLEdBQUcsQ0FBQTtRQUNkLElBQUksQ0FBQyxPQUFPLEdBQUcscUJBQWEsQ0FBQyxVQUFVLENBQUMsT0FBTyxDQUFDLENBQUE7UUFDaEQsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUE7UUFDeEIsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLElBQUksWUFBSyxDQUFDLFVBQVUsQ0FBQyxRQUFRLENBQUMsQ0FBQTtRQUN0RCxJQUFJLENBQUMsT0FBTyxHQUFHLE9BQU8sQ0FBQTtRQUN0QixJQUFJLENBQUMsUUFBUSxHQUFHLElBQUksQ0FBQTtJQUN0QixDQUFDO0lBRU0sT0FBTztRQUNaLE1BQU0sQ0FBQyxJQUFJLENBQUMsUUFBUSxDQUFBO0lBQ3RCLENBQUM7SUFFTSxRQUFRLENBQUUsT0FBZ0I7UUFDL0IsSUFBSSxDQUFDLFFBQVEsR0FBRyxPQUFPLENBQUE7SUFDekIsQ0FBQztJQUVNLElBQUk7UUFDVCxNQUFNLENBQUMsR0FBRyxtQkFBVSxDQUFDLEtBQUssQ0FBQyxDQUFBO1FBQzNCLENBQUMsQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQztZQUN0QixHQUFHLEVBQUUsSUFBSSxDQUFDLEdBQUcsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVEsSUFBSSxJQUFJLENBQUMsUUFBUSxDQUFDLFNBQVMsRUFBRTtZQUNuRSxPQUFPLEVBQUUsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLEVBQUUsRUFBRSxRQUFRLEVBQUUsSUFBSSxDQUFDLFFBQVE7WUFDcEQsT0FBTyxFQUFFLElBQUksQ0FBQyxPQUFPO1NBQ3RCLENBQUMsQ0FBQyxDQUFBO1FBQ0gsTUFBTSxDQUFDLENBQUMsQ0FBQyxNQUFNLENBQUMsUUFBUSxDQUFDLENBQUE7SUFDM0IsQ0FBQztDQUNGO0FBakNELGdDQWlDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7Y3JlYXRlSGFzaH0gZnJvbSAnY3J5cHRvJ1xuaW1wb3J0IHtQb2ludH0gZnJvbSAnYXRvbSdcbmltcG9ydCB7VE1lc3NhZ2UsIE1lc3NhZ2VPYmplY3R9IGZyb20gJy4uL3V0aWxzJ1xuXG5leHBvcnQgdHlwZSBUU2V2ZXJpdHkgPSAnZXJyb3InIHwgJ3dhcm5pbmcnIHwgJ2xpbnQnIHwgc3RyaW5nXG5leHBvcnQgdHlwZSBUUG9zaXRpb24gPSBQb2ludCB8IFtudW1iZXIsIG51bWJlcl1cblxuZXhwb3J0IGludGVyZmFjZSBJUmVzdWx0SXRlbSB7XG4gIHVyaT86IHN0cmluZ1xuICBwb3NpdGlvbj86IFRQb3NpdGlvblxuICBtZXNzYWdlOiBUTWVzc2FnZVxuICBzZXZlcml0eTogVFNldmVyaXR5XG4gIGNvbnRleHQ/OiBzdHJpbmdcbn1cblxuZXhwb3J0IGNsYXNzIFJlc3VsdEl0ZW0ge1xuICBwdWJsaWMgcmVhZG9ubHkgdXJpPzogc3RyaW5nXG4gIHB1YmxpYyByZWFkb25seSBwb3NpdGlvbj86IFBvaW50XG4gIHB1YmxpYyByZWFkb25seSBtZXNzYWdlOiBNZXNzYWdlT2JqZWN0XG4gIHB1YmxpYyByZWFkb25seSBzZXZlcml0eTogVFNldmVyaXR5XG4gIHB1YmxpYyByZWFkb25seSBjb250ZXh0Pzogc3RyaW5nXG4gIHByaXZhdGUgX2lzVmFsaWQ6IGJvb2xlYW5cbiAgY29uc3RydWN0b3IgKHB1YmxpYyByZWFkb25seSBwcm92aWRlcklkOiBudW1iZXIsIHt1cmksIG1lc3NhZ2UsIHNldmVyaXR5LCBwb3NpdGlvbiwgY29udGV4dH06IElSZXN1bHRJdGVtKSB7XG4gICAgdGhpcy51cmkgPSB1cmlcbiAgICB0aGlzLm1lc3NhZ2UgPSBNZXNzYWdlT2JqZWN0LmZyb21PYmplY3QobWVzc2FnZSlcbiAgICB0aGlzLnNldmVyaXR5ID0gc2V2ZXJpdHlcbiAgICB0aGlzLnBvc2l0aW9uID0gcG9zaXRpb24gJiYgUG9pbnQuZnJvbU9iamVjdChwb3NpdGlvbilcbiAgICB0aGlzLmNvbnRleHQgPSBjb250ZXh0XG4gICAgdGhpcy5faXNWYWxpZCA9IHRydWVcbiAgfVxuXG4gIHB1YmxpYyBpc1ZhbGlkICgpIHtcbiAgICByZXR1cm4gdGhpcy5faXNWYWxpZFxuICB9XG5cbiAgcHVibGljIHNldFZhbGlkIChpc1ZhbGlkOiBib29sZWFuKSB7XG4gICAgdGhpcy5faXNWYWxpZCA9IGlzVmFsaWRcbiAgfVxuXG4gIHB1YmxpYyBoYXNoICgpIHtcbiAgICBjb25zdCBoID0gY3JlYXRlSGFzaCgnbWQ1JylcbiAgICBoLnVwZGF0ZShKU09OLnN0cmluZ2lmeSh7XG4gICAgICB1cmk6IHRoaXMudXJpLCBwb3NpdGlvbjogdGhpcy5wb3NpdGlvbiAmJiB0aGlzLnBvc2l0aW9uLnNlcmlhbGl6ZSgpLFxuICAgICAgbWVzc2FnZTogdGhpcy5tZXNzYWdlLnJhdygpLCBzZXZlcml0eTogdGhpcy5zZXZlcml0eSxcbiAgICAgIGNvbnRleHQ6IHRoaXMuY29udGV4dFxuICAgIH0pKVxuICAgIHJldHVybiBoLmRpZ2VzdCgnbGF0aW4xJylcbiAgfVxufVxuIl19