"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const utils_1 = require("../../utils");
function create(pluginName, pluginManager, disposables) {
    return {
        show({ editor, eventType, detail, tooltip }) {
            if (!eventType) {
                eventType = utils_1.getEventType(detail);
            }
            pluginManager.tooltipRegistry.showTooltip(editor, eventType, { pluginName, tooltip });
        },
        onShouldShowTooltip(...args) {
            if (args.length < 2) {
                args.unshift(100);
            }
            const [priority, handler] = args;
            const disp = pluginManager.tooltipRegistry.register(pluginName, { priority, handler });
            return disp;
        }
    };
}
exports.create = create;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG9vbHRpcHMuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXBpLTAuMy9pbnN0YW5jZS90b29sdGlwcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUdBLHVDQUF3QztBQTBEeEMsZ0JBQ0UsVUFBa0IsRUFBRSxhQUE0QixFQUFFLFdBQWdDO0lBRWxGLE1BQU0sQ0FBQztRQUNMLElBQUksQ0FBRSxFQUFDLE1BQU0sRUFBRSxTQUFTLEVBQUUsTUFBTSxFQUFFLE9BQU8sRUFBQztZQUN4QyxFQUFFLENBQUMsQ0FBQyxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7Z0JBQ2YsU0FBUyxHQUFHLG9CQUFZLENBQUMsTUFBTSxDQUFDLENBQUE7WUFDbEMsQ0FBQztZQUNELGFBQWEsQ0FBQyxlQUFlLENBQUMsV0FBVyxDQUN2QyxNQUFNLEVBQUUsU0FBUyxFQUFFLEVBQUMsVUFBVSxFQUFFLE9BQU8sRUFBQyxDQUN6QyxDQUFBO1FBQ0gsQ0FBQztRQUNELG1CQUFtQixDQUFFLEdBQUcsSUFBVztZQUNqQyxFQUFFLENBQUMsQ0FBQyxJQUFJLENBQUMsTUFBTSxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BCLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDbkIsQ0FBQztZQUNELE1BQU0sQ0FBQyxRQUFRLEVBQUUsT0FBTyxDQUFDLEdBQUcsSUFBSSxDQUFBO1lBQ2hDLE1BQU0sSUFBSSxHQUFHLGFBQWEsQ0FBQyxlQUFlLENBQUMsUUFBUSxDQUFDLFVBQVUsRUFBRSxFQUFDLFFBQVEsRUFBRSxPQUFPLEVBQUMsQ0FBQyxDQUFBO1lBQ3BGLE1BQU0sQ0FBQyxJQUFJLENBQUE7UUFDYixDQUFDO0tBQ0YsQ0FBQTtBQUNILENBQUM7QUFyQkQsd0JBcUJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtEaXNwb3NhYmxlLCBUZXh0RWRpdG9yLCBDb21wb3NpdGVEaXNwb3NhYmxlfSBmcm9tICdhdG9tJ1xuaW1wb3J0IHtQbHVnaW5NYW5hZ2VyfSBmcm9tICcuLi8uLi9wbHVnaW4tbWFuYWdlcidcbmltcG9ydCB7VEV2ZW50UmFuZ2VUeXBlfSBmcm9tICcuLi8uLi9lZGl0b3ItY29udHJvbC90b29sdGlwLW1hbmFnZXInXG5pbXBvcnQge2dldEV2ZW50VHlwZX0gZnJvbSAnLi4vLi4vdXRpbHMnXG5pbXBvcnQge1RUb29sdGlwRnVuY3Rpb24sIFRUb29sdGlwSGFuZGxlcn0gZnJvbSAnLi4vLi4vdG9vbHRpcC1yZWdpc3RyeSdcblxuZXhwb3J0IHtUVG9vbHRpcEhhbmRsZXJ9XG5cbmludGVyZmFjZSBJU2hvd1Rvb2x0aXBQYXJhbXMge1xuICBlZGl0b3I6IFRleHRFZGl0b3JcbiAgZXZlbnRUeXBlPzogVEV2ZW50UmFuZ2VUeXBlXG4gIGRldGFpbD86IGFueVxuICB0b29sdGlwOiBUVG9vbHRpcEZ1bmN0aW9uXG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgSU1haW5JbnRlcmZhY2Uge1xuICAvKipcbiAgU2hvdyB0b29sdGlwIGluIGVkaXRvci5cblxuICBlZGl0b3I6IGVkaXRvciB0aGF0IHdpbGwgc2hvdyB0b29sdGlwXG4gIHBvczogdG9vbHRpcCBwb3NpdGlvblxuICBldmVudFR5cGU6IG9uZSBvZiAnY29udGV4dCcsICdrZXlib2FyZCcgYW5kICdtb3VzZSdcbiAgZGV0YWlsOiBmb3IgYXV0b21hdGljIHNlbGVjdGlvbiBiZXR3ZWVuICdjb250ZXh0JyBhbmQgJ2tleWJvYXJkJy5cbiAgICAgICAgICBJZ25vcmVkIGlmICdldmVudFR5cGUnIGlzIHNldC5cbiAgdG9vbHRpcDogZnVuY3Rpb24oY3JhbmdlKVxuICAgIGNyYW5nZTogUmFuZ2UsIGN1cnJlbnRseSBzZWxlY3RlZCByYW5nZSBpbiBlZGl0b3IgKHBvc3NpYmx5IGVtcHR5KVxuXG4gICAgUmV0dXJucyB7cmFuZ2UsIHRleHR9IG9yIFByb21pc2VcbiAgICAgIHJhbmdlOiBSYW5nZSwgdG9vbHRpcCBoaWdobGlnaHRpbmcgcmFuZ2VcbiAgICAgIHBlcnNpc3RPbkN1cnNvck1vdmU6IEJvb2xlYW4sIG9wdGlvbmFsLCBkZWZhdWx0IGZhbHNlLCBwZXJzaXN0IG9uIGN1cnNvciBtb3ZlIHJlZ2FyZGxlc3Mgb2Ygc2V0dGluZ3NcbiAgICAgIHRleHQ6IHRvb2x0aXAgdGV4dC4gU3RyaW5nIG9yIHt0ZXh0LCBoaWdobGlnaHRlcn0gb3Ige2h0bWx9XG4gICAgICAgIHRleHQ6IHRvb2x0aXAgdGV4dFxuICAgICAgICBoaWdobGlnaHRlcjogZ3JhbW1hciBzY29wZSB0aGF0IHdpbGwgYmUgdXNlZCB0byBoaWdobGlnaHQgdG9vbHRpcCB0ZXh0XG4gICAgICAgIGh0bWw6IGh0bWwgdG8gYmUgZGlzcGxheWVkIGluIHRvb2x0aXBcbiAgKi9cbiAgc2hvdyAocGFyYW1zOiBJU2hvd1Rvb2x0aXBQYXJhbXMpOiB2b2lkXG5cbiAgLyoqXG4gIEVkaXRvciBldmVudCBzdWJzY3JpcHRpb24uIEZpcmVzIHdoZW4gbW91c2UgY3Vyc29yIHN0b3BwZWQgb3ZlciBhIHN5bWJvbCBpblxuICBlZGl0b3IuXG5cbiAgcHJpb3JpdHk6IGV2ZW50IHByaW9yaXR5LCBoaWdoZXIgdmFsdWUgbWVhbnMgaGlnaGVyIHByaW9yaXR5LFxuICAgICAgICAgICAgc3Vic2NyaXB0aW9uIHdpdGggaGlnaHRlc3QgcHJpb3JpdHkgd2lsbCBiZSBjYWxsZWQgZmlyc3QuXG4gIGNhbGxiYWNrOiBjYWxsYmFjayhlZGl0b3IsIGNyYW5nZSwgdHlwZSlcbiAgICBlZGl0b3I6IFRleHRFZGl0b3IsIGVkaXRvciB0aGF0IGdlbmVyYXRlZCBldmVudFxuICAgIGNyYW5nZTogUmFuZ2UsIGN1cnNvciByYW5nZSB0aGF0IGdlbmVyYXRlZCBldmVudC5cbiAgICB0eXBlOiBPbmUgb2YgJ21vdXNlJywgJ3NlbGVjdGlvbicgLS0gdHlwZSBvZiBldmVudCB0aGF0IHRyaWdnZXJlZCB0aGlzXG5cbiAgICBSZXR1cm5zIHtyYW5nZSwgdGV4dH0gb3IgUHJvbWlzZS5cbiAgICAgIHJhbmdlOiBSYW5nZSwgdG9vbHRpcCBoaWdobGlnaHRpbmcgcmFuZ2VcbiAgICAgIHRleHQ6IHRvb2x0aXAgdGV4dC4gU3RyaW5nIG9yIHt0ZXh0LCBoaWdobGlnaHRlcn0gb3Ige2h0bWx9XG4gICAgICAgIHRleHQ6IHRvb2x0aXAgdGV4dFxuICAgICAgICBoaWdobGlnaHRlcjogZ3JhbW1hciBzY29wZSB0aGF0IHdpbGwgYmUgdXNlZCB0byBoaWdobGlnaHQgdG9vbHRpcCB0ZXh0XG4gICAgICAgIGh0bWw6IGh0bWwgdG8gYmUgZGlzcGxheWVkIGluIHRvb2x0aXBcblxuICByZXR1cm5zIERpc3Bvc2FibGVcbiAgKi9cbiAgb25TaG91bGRTaG93VG9vbHRpcCAocHJpb3JpdHk6IG51bWJlciwgaGFuZGxlcjogVFRvb2x0aXBIYW5kbGVyKTogRGlzcG9zYWJsZVxuICBvblNob3VsZFNob3dUb29sdGlwIChoYW5kbGVyOiBUVG9vbHRpcEhhbmRsZXIpOiBEaXNwb3NhYmxlXG59XG5cbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGUgKFxuICBwbHVnaW5OYW1lOiBzdHJpbmcsIHBsdWdpbk1hbmFnZXI6IFBsdWdpbk1hbmFnZXIsIGRpc3Bvc2FibGVzOiBDb21wb3NpdGVEaXNwb3NhYmxlXG4pOiBJTWFpbkludGVyZmFjZSB7XG4gIHJldHVybiB7XG4gICAgc2hvdyAoe2VkaXRvciwgZXZlbnRUeXBlLCBkZXRhaWwsIHRvb2x0aXB9KSB7XG4gICAgICBpZiAoIWV2ZW50VHlwZSkge1xuICAgICAgICBldmVudFR5cGUgPSBnZXRFdmVudFR5cGUoZGV0YWlsKVxuICAgICAgfVxuICAgICAgcGx1Z2luTWFuYWdlci50b29sdGlwUmVnaXN0cnkuc2hvd1Rvb2x0aXAoXG4gICAgICAgIGVkaXRvciwgZXZlbnRUeXBlLCB7cGx1Z2luTmFtZSwgdG9vbHRpcH1cbiAgICAgIClcbiAgICB9LFxuICAgIG9uU2hvdWxkU2hvd1Rvb2x0aXAgKC4uLmFyZ3M6IGFueVtdKSB7XG4gICAgICBpZiAoYXJncy5sZW5ndGggPCAyKSB7XG4gICAgICAgIGFyZ3MudW5zaGlmdCgxMDApXG4gICAgICB9XG4gICAgICBjb25zdCBbcHJpb3JpdHksIGhhbmRsZXJdID0gYXJnc1xuICAgICAgY29uc3QgZGlzcCA9IHBsdWdpbk1hbmFnZXIudG9vbHRpcFJlZ2lzdHJ5LnJlZ2lzdGVyKHBsdWdpbk5hbWUsIHtwcmlvcml0eSwgaGFuZGxlcn0pXG4gICAgICByZXR1cm4gZGlzcFxuICAgIH1cbiAgfVxufVxuIl19