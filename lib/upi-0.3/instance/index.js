"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atom_1 = require("atom");
const error_1 = require("../error");
exports.UPIError = error_1.UPIError;
const Menu = require("./menu");
const Messages = require("./messages");
const Events = require("./events");
const Tooltips = require("./tooltips");
const Controls = require("./controls");
const Params = require("./params");
class UPIInstance {
    constructor(pluginManager, pluginName, main) {
        this.disposables = new atom_1.CompositeDisposable();
        this.tooltipEvents = new Set();
        this.destroyed = false;
        this.utils = { withEventRange: main.withEventRange.bind(main) };
        this.menu = Menu.create(this.disposables);
        this.messages = Messages.create(pluginName, pluginManager);
        this.tooltips = Tooltips.create(pluginManager, main, this);
        this.events = Events.create(pluginManager, this.disposables);
        this.controls = Controls.create(pluginManager);
        this.params = Params.create(pluginName, pluginManager);
    }
    destroy() {
        this.disposables.dispose();
        this.tooltipEvents.clear();
        this.destroyed = true;
    }
    check() {
        if (this.destroyed) {
            throw new error_1.UPIError('This UPI interface was destroyed');
        }
        return this;
    }
}
exports.UPIInstance = UPIInstance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXBpLTAuMy9pbnN0YW5jZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3QztBQUV4QyxvQ0FBaUM7QUFFekIsb0NBQVE7QUFFaEIsK0JBQThCO0FBQzlCLHVDQUFzQztBQUN0QyxtQ0FBa0M7QUFDbEMsdUNBQXNDO0FBQ3RDLHVDQUFzQztBQUN0QyxtQ0FBa0M7QUFLbEM7SUFXRSxZQUFhLGFBQTRCLEVBQUUsVUFBa0IsRUFBRSxJQUFTO1FBQ3RFLElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSwwQkFBbUIsRUFBRSxDQUFBO1FBQzVDLElBQUksQ0FBQyxhQUFhLEdBQUcsSUFBSSxHQUFHLEVBQUUsQ0FBQTtRQUM5QixJQUFJLENBQUMsU0FBUyxHQUFHLEtBQUssQ0FBQTtRQUV0QixJQUFJLENBQUMsS0FBSyxHQUFHLEVBQUMsY0FBYyxFQUFFLElBQUksQ0FBQyxjQUFjLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxFQUFDLENBQUE7UUFFN0QsSUFBSSxDQUFDLElBQUksR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQTtRQUN6QyxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxDQUFBO1FBRTFELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsSUFBSSxFQUFFLElBQUksQ0FBQyxDQUFBO1FBQzFELElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxhQUFhLEVBQUUsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFBO1FBQzVELElBQUksQ0FBQyxRQUFRLEdBQUcsUUFBUSxDQUFDLE1BQU0sQ0FBQyxhQUFhLENBQUMsQ0FBQTtRQUM5QyxJQUFJLENBQUMsTUFBTSxHQUFHLE1BQU0sQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsQ0FBQyxDQUFBO0lBQ3hELENBQUM7SUFFTSxPQUFPO1FBQ1osSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUMxQixJQUFJLENBQUMsYUFBYSxDQUFDLEtBQUssRUFBRSxDQUFBO1FBQzFCLElBQUksQ0FBQyxTQUFTLEdBQUcsSUFBSSxDQUFBO0lBQ3ZCLENBQUM7SUFFTSxLQUFLO1FBQ1YsRUFBRSxDQUFDLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxDQUFDLENBQUM7WUFDbkIsTUFBTSxJQUFJLGdCQUFRLENBQUMsa0NBQWtDLENBQUMsQ0FBQTtRQUN4RCxDQUFDO1FBQ0QsTUFBTSxDQUFDLElBQUksQ0FBQTtJQUNiLENBQUM7Q0FDRjtBQXZDRCxrQ0F1Q0MiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge0NvbXBvc2l0ZURpc3Bvc2FibGV9IGZyb20gJ2F0b20nXG5pbXBvcnQge1BsdWdpbk1hbmFnZXJ9IGZyb20gJy4uLy4uL3BsdWdpbi1tYW5hZ2VyJ1xuaW1wb3J0IHtVUElFcnJvcn0gZnJvbSAnLi4vZXJyb3InXG5pbXBvcnQge1VQSX0gZnJvbSAnLi4vJ1xuZXhwb3J0IHtVUElFcnJvcn1cblxuaW1wb3J0ICogYXMgTWVudSBmcm9tICcuL21lbnUnXG5pbXBvcnQgKiBhcyBNZXNzYWdlcyBmcm9tICcuL21lc3NhZ2VzJ1xuaW1wb3J0ICogYXMgRXZlbnRzIGZyb20gJy4vZXZlbnRzJ1xuaW1wb3J0ICogYXMgVG9vbHRpcHMgZnJvbSAnLi90b29sdGlwcydcbmltcG9ydCAqIGFzIENvbnRyb2xzIGZyb20gJy4vY29udHJvbHMnXG5pbXBvcnQgKiBhcyBQYXJhbXMgZnJvbSAnLi9wYXJhbXMnXG5pbXBvcnQgKiBhcyBVdGlscyBmcm9tICcuL3V0aWxzJ1xuXG5leHBvcnQgdHlwZSBUVG9vbHRpcEhhbmRsZXJTcGVjID0ge3ByaW9yaXR5OiBudW1iZXIsIGhhbmRsZXI6IFRvb2x0aXBzLlRUb29sdGlwSGFuZGxlcn1cblxuZXhwb3J0IGNsYXNzIFVQSUluc3RhbmNlIHtcbiAgcHVibGljIG1lbnU6IE1lbnUuSU1haW5JbnRlcmZhY2VcbiAgcHVibGljIG1lc3NhZ2VzOiBNZXNzYWdlcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgZXZlbnRzOiBFdmVudHMuSU1haW5JbnRlcmZhY2VcbiAgcHVibGljIHRvb2x0aXBzOiBUb29sdGlwcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgY29udHJvbHM6IENvbnRyb2xzLklNYWluSW50ZXJmYWNlXG4gIHB1YmxpYyBwYXJhbXM6IFBhcmFtcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgdXRpbHM6IFV0aWxzLklNYWluSW50ZXJmYWNlXG4gIHB1YmxpYyB0b29sdGlwRXZlbnRzOiBTZXQ8VFRvb2x0aXBIYW5kbGVyU3BlYz5cbiAgcHJpdmF0ZSBkaXNwb3NhYmxlczogQ29tcG9zaXRlRGlzcG9zYWJsZVxuICBwcml2YXRlIGRlc3Ryb3llZDogYm9vbGVhblxuICBjb25zdHJ1Y3RvciAocGx1Z2luTWFuYWdlcjogUGx1Z2luTWFuYWdlciwgcGx1Z2luTmFtZTogc3RyaW5nLCBtYWluOiBVUEkpIHtcbiAgICB0aGlzLmRpc3Bvc2FibGVzID0gbmV3IENvbXBvc2l0ZURpc3Bvc2FibGUoKVxuICAgIHRoaXMudG9vbHRpcEV2ZW50cyA9IG5ldyBTZXQoKVxuICAgIHRoaXMuZGVzdHJveWVkID0gZmFsc2VcblxuICAgIHRoaXMudXRpbHMgPSB7d2l0aEV2ZW50UmFuZ2U6IG1haW4ud2l0aEV2ZW50UmFuZ2UuYmluZChtYWluKX1cblxuICAgIHRoaXMubWVudSA9IE1lbnUuY3JlYXRlKHRoaXMuZGlzcG9zYWJsZXMpXG4gICAgdGhpcy5tZXNzYWdlcyA9IE1lc3NhZ2VzLmNyZWF0ZShwbHVnaW5OYW1lLCBwbHVnaW5NYW5hZ2VyKVxuXG4gICAgdGhpcy50b29sdGlwcyA9IFRvb2x0aXBzLmNyZWF0ZShwbHVnaW5NYW5hZ2VyLCBtYWluLCB0aGlzKVxuICAgIHRoaXMuZXZlbnRzID0gRXZlbnRzLmNyZWF0ZShwbHVnaW5NYW5hZ2VyLCB0aGlzLmRpc3Bvc2FibGVzKVxuICAgIHRoaXMuY29udHJvbHMgPSBDb250cm9scy5jcmVhdGUocGx1Z2luTWFuYWdlcilcbiAgICB0aGlzLnBhcmFtcyA9IFBhcmFtcy5jcmVhdGUocGx1Z2luTmFtZSwgcGx1Z2luTWFuYWdlcilcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95ICgpIHtcbiAgICB0aGlzLmRpc3Bvc2FibGVzLmRpc3Bvc2UoKVxuICAgIHRoaXMudG9vbHRpcEV2ZW50cy5jbGVhcigpXG4gICAgdGhpcy5kZXN0cm95ZWQgPSB0cnVlXG4gIH1cblxuICBwdWJsaWMgY2hlY2sgKCkge1xuICAgIGlmICh0aGlzLmRlc3Ryb3llZCkge1xuICAgICAgdGhyb3cgbmV3IFVQSUVycm9yKCdUaGlzIFVQSSBpbnRlcmZhY2Ugd2FzIGRlc3Ryb3llZCcpXG4gICAgfVxuICAgIHJldHVybiB0aGlzXG4gIH1cbn1cbiJdfQ==