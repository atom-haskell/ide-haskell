"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const atom_1 = require("atom");
const error_1 = require("../error");
exports.UPIError = error_1.UPIError;
const Menu = require("./menu");
const Messages = require("./messages");
const Events = require("./events");
const Tooltips = require("./tooltips");
const Controls = require("./controls");
const Params = require("./params");
const Utils = require("./utils");
class UPIInstance {
    constructor(pluginManager, pluginName) {
        this.disposables = new atom_1.CompositeDisposable();
        this.destroyed = false;
        this.menu = Menu.create(this.disposables);
        this.messages = Messages.create(pluginName, pluginManager);
        this.tooltips = Tooltips.create(pluginName, pluginManager, this.disposables);
        this.events = Events.create(pluginManager, this.disposables);
        this.controls = Controls.create(pluginManager);
        this.params = Params.create(pluginName, pluginManager);
        this.utils = Utils.create(pluginManager);
    }
    destroy() {
        this.disposables.dispose();
        this.destroyed = true;
    }
    check() {
        if (this.destroyed) {
            throw new error_1.UPIError('This UPI interface was destroyed');
        }
        return this;
    }
}
exports.UPIInstance = UPIInstance;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi8uLi9zcmMvdXBpLTAuMy9pbnN0YW5jZS9pbmRleC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOztBQUFBLCtCQUF3QztBQUV4QyxvQ0FBaUM7QUFDekIsb0NBQVE7QUFFaEIsK0JBQThCO0FBQzlCLHVDQUFzQztBQUN0QyxtQ0FBa0M7QUFDbEMsdUNBQXNDO0FBQ3RDLHVDQUFzQztBQUN0QyxtQ0FBa0M7QUFDbEMsaUNBQWdDO0FBSWhDO0lBVUUsWUFBYSxhQUE0QixFQUFFLFVBQWtCO1FBQzNELElBQUksQ0FBQyxXQUFXLEdBQUcsSUFBSSwwQkFBbUIsRUFBRSxDQUFBO1FBQzVDLElBQUksQ0FBQyxTQUFTLEdBQUcsS0FBSyxDQUFBO1FBRXRCLElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDekMsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLFVBQVUsRUFBRSxhQUFhLENBQUMsQ0FBQTtRQUUxRCxJQUFJLENBQUMsUUFBUSxHQUFHLFFBQVEsQ0FBQyxNQUFNLENBQUMsVUFBVSxFQUFFLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDNUUsSUFBSSxDQUFDLE1BQU0sR0FBRyxNQUFNLENBQUMsTUFBTSxDQUFDLGFBQWEsRUFBRSxJQUFJLENBQUMsV0FBVyxDQUFDLENBQUE7UUFDNUQsSUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO1FBQzlDLElBQUksQ0FBQyxNQUFNLEdBQUcsTUFBTSxDQUFDLE1BQU0sQ0FBQyxVQUFVLEVBQUUsYUFBYSxDQUFDLENBQUE7UUFDdEQsSUFBSSxDQUFDLEtBQUssR0FBRyxLQUFLLENBQUMsTUFBTSxDQUFDLGFBQWEsQ0FBQyxDQUFBO0lBQzFDLENBQUM7SUFFTSxPQUFPO1FBQ1osSUFBSSxDQUFDLFdBQVcsQ0FBQyxPQUFPLEVBQUUsQ0FBQTtRQUMxQixJQUFJLENBQUMsU0FBUyxHQUFHLElBQUksQ0FBQTtJQUN2QixDQUFDO0lBRU0sS0FBSztRQUNWLEVBQUUsQ0FBQyxDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDO1lBQ25CLE1BQU0sSUFBSSxnQkFBUSxDQUFDLGtDQUFrQyxDQUFDLENBQUE7UUFDeEQsQ0FBQztRQUNELE1BQU0sQ0FBQyxJQUFJLENBQUE7SUFDYixDQUFDO0NBQ0Y7QUFuQ0Qsa0NBbUNDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtDb21wb3NpdGVEaXNwb3NhYmxlfSBmcm9tICdhdG9tJ1xuaW1wb3J0IHtQbHVnaW5NYW5hZ2VyfSBmcm9tICcuLi8uLi9wbHVnaW4tbWFuYWdlcidcbmltcG9ydCB7VVBJRXJyb3J9IGZyb20gJy4uL2Vycm9yJ1xuZXhwb3J0IHtVUElFcnJvcn1cblxuaW1wb3J0ICogYXMgTWVudSBmcm9tICcuL21lbnUnXG5pbXBvcnQgKiBhcyBNZXNzYWdlcyBmcm9tICcuL21lc3NhZ2VzJ1xuaW1wb3J0ICogYXMgRXZlbnRzIGZyb20gJy4vZXZlbnRzJ1xuaW1wb3J0ICogYXMgVG9vbHRpcHMgZnJvbSAnLi90b29sdGlwcydcbmltcG9ydCAqIGFzIENvbnRyb2xzIGZyb20gJy4vY29udHJvbHMnXG5pbXBvcnQgKiBhcyBQYXJhbXMgZnJvbSAnLi9wYXJhbXMnXG5pbXBvcnQgKiBhcyBVdGlscyBmcm9tICcuL3V0aWxzJ1xuXG5leHBvcnQgdHlwZSBUVG9vbHRpcEhhbmRsZXJTcGVjID0ge3ByaW9yaXR5OiBudW1iZXIsIGhhbmRsZXI6IFRvb2x0aXBzLlRUb29sdGlwSGFuZGxlcn1cblxuZXhwb3J0IGNsYXNzIFVQSUluc3RhbmNlIHtcbiAgcHVibGljIG1lbnU6IE1lbnUuSU1haW5JbnRlcmZhY2VcbiAgcHVibGljIG1lc3NhZ2VzOiBNZXNzYWdlcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgZXZlbnRzOiBFdmVudHMuSU1haW5JbnRlcmZhY2VcbiAgcHVibGljIHRvb2x0aXBzOiBUb29sdGlwcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgY29udHJvbHM6IENvbnRyb2xzLklNYWluSW50ZXJmYWNlXG4gIHB1YmxpYyBwYXJhbXM6IFBhcmFtcy5JTWFpbkludGVyZmFjZVxuICBwdWJsaWMgdXRpbHM6IFV0aWxzLklNYWluSW50ZXJmYWNlXG4gIHByaXZhdGUgZGlzcG9zYWJsZXM6IENvbXBvc2l0ZURpc3Bvc2FibGVcbiAgcHJpdmF0ZSBkZXN0cm95ZWQ6IGJvb2xlYW5cbiAgY29uc3RydWN0b3IgKHBsdWdpbk1hbmFnZXI6IFBsdWdpbk1hbmFnZXIsIHBsdWdpbk5hbWU6IHN0cmluZykge1xuICAgIHRoaXMuZGlzcG9zYWJsZXMgPSBuZXcgQ29tcG9zaXRlRGlzcG9zYWJsZSgpXG4gICAgdGhpcy5kZXN0cm95ZWQgPSBmYWxzZVxuXG4gICAgdGhpcy5tZW51ID0gTWVudS5jcmVhdGUodGhpcy5kaXNwb3NhYmxlcylcbiAgICB0aGlzLm1lc3NhZ2VzID0gTWVzc2FnZXMuY3JlYXRlKHBsdWdpbk5hbWUsIHBsdWdpbk1hbmFnZXIpXG5cbiAgICB0aGlzLnRvb2x0aXBzID0gVG9vbHRpcHMuY3JlYXRlKHBsdWdpbk5hbWUsIHBsdWdpbk1hbmFnZXIsIHRoaXMuZGlzcG9zYWJsZXMpXG4gICAgdGhpcy5ldmVudHMgPSBFdmVudHMuY3JlYXRlKHBsdWdpbk1hbmFnZXIsIHRoaXMuZGlzcG9zYWJsZXMpXG4gICAgdGhpcy5jb250cm9scyA9IENvbnRyb2xzLmNyZWF0ZShwbHVnaW5NYW5hZ2VyKVxuICAgIHRoaXMucGFyYW1zID0gUGFyYW1zLmNyZWF0ZShwbHVnaW5OYW1lLCBwbHVnaW5NYW5hZ2VyKVxuICAgIHRoaXMudXRpbHMgPSBVdGlscy5jcmVhdGUocGx1Z2luTWFuYWdlcilcbiAgfVxuXG4gIHB1YmxpYyBkZXN0cm95ICgpIHtcbiAgICB0aGlzLmRpc3Bvc2FibGVzLmRpc3Bvc2UoKVxuICAgIHRoaXMuZGVzdHJveWVkID0gdHJ1ZVxuICB9XG5cbiAgcHVibGljIGNoZWNrICgpIHtcbiAgICBpZiAodGhpcy5kZXN0cm95ZWQpIHtcbiAgICAgIHRocm93IG5ldyBVUElFcnJvcignVGhpcyBVUEkgaW50ZXJmYWNlIHdhcyBkZXN0cm95ZWQnKVxuICAgIH1cbiAgICByZXR1cm4gdGhpc1xuICB9XG59XG4iXX0=