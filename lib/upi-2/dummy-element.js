"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
class DummyElement {
    constructor(opts) {
        this.opts = opts;
        this.element = opts.element.cloneNode(true);
        this.init();
    }
    update(opts) {
        this.opts = opts;
        this.element.remove();
        this.element = opts.element.cloneNode(true);
        this.init();
    }
    init() {
        const { id, events, classes, style, attrs } = this.opts;
        if (id) {
            this.element.id = id;
        }
        if (events) {
            for (const ev of Object.keys(events)) {
                this.element.addEventListener(ev, events[ev]);
            }
        }
        if (classes) {
            for (const cls of classes) {
                this.element.classList.add(cls);
            }
        }
        if (style) {
            for (const st of Object.keys(style)) {
                this.element.style[st] = style[st];
            }
        }
        if (attrs) {
            for (const at of Object.keys(attrs)) {
                this.element.setAttribute(at, attrs[at]);
            }
        }
    }
}
exports.DummyElement = DummyElement;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZHVtbXktZWxlbWVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uL3NyYy91cGktMi9kdW1teS1lbGVtZW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7O0FBRUE7SUFFRSxZQUFxQixJQUEyQztRQUEzQyxTQUFJLEdBQUosSUFBSSxDQUF1QztRQUM5RCxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksQ0FBQyxPQUFPLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBZ0IsQ0FBQTtRQUMxRCxJQUFJLENBQUMsSUFBSSxFQUFFLENBQUE7SUFDYixDQUFDO0lBRU0sTUFBTSxDQUFFLElBQTJDO1FBQ3hELElBQUksQ0FBQyxJQUFJLEdBQUcsSUFBSSxDQUFBO1FBQ2hCLElBQUksQ0FBQyxPQUFPLENBQUMsTUFBTSxFQUFFLENBQUE7UUFDckIsSUFBSSxDQUFDLE9BQU8sR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQWdCLENBQUE7UUFDMUQsSUFBSSxDQUFDLElBQUksRUFBRSxDQUFBO0lBQ2IsQ0FBQztJQUVPLElBQUk7UUFDVixNQUFNLEVBQUMsRUFBRSxFQUFFLE1BQU0sRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLEtBQUssRUFBQyxHQUFHLElBQUksQ0FBQyxJQUFJLENBQUE7UUFDckQsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQztZQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsRUFBRSxHQUFHLEVBQUUsQ0FBQTtRQUFDLENBQUM7UUFDaEMsRUFBRSxDQUFDLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQztZQUNYLEdBQUcsQ0FBQyxDQUFDLE1BQU0sRUFBRSxJQUFJLE1BQU0sQ0FBQyxJQUFJLENBQUMsTUFBTSxDQUFDLENBQUMsQ0FBQyxDQUFDO2dCQUNyQyxJQUFJLENBQUMsT0FBTyxDQUFDLGdCQUFnQixDQUFDLEVBQUUsRUFBRSxNQUFNLENBQUMsRUFBRSxDQUFDLENBQUMsQ0FBQTtZQUMvQyxDQUFDO1FBQ0gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxDQUFDLENBQUM7WUFDWixHQUFHLENBQUMsQ0FBQyxNQUFNLEdBQUcsSUFBSSxPQUFPLENBQUMsQ0FBQyxDQUFDO2dCQUMxQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsR0FBRyxDQUFDLENBQUE7WUFDakMsQ0FBQztRQUNILENBQUM7UUFDRCxFQUFFLENBQUMsQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDO1lBQ1YsR0FBRyxDQUFDLENBQUMsTUFBTSxFQUFFLElBQUksTUFBTSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQyxDQUFDLENBQUM7Z0JBQ3BDLElBQUksQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFDLEVBQUUsQ0FBQyxHQUFHLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQTtZQUNwQyxDQUFDO1FBQ0gsQ0FBQztRQUNELEVBQUUsQ0FBQyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUM7WUFDVixHQUFHLENBQUMsQ0FBQyxNQUFNLEVBQUUsSUFBSSxNQUFNLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDcEMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxZQUFZLENBQUMsRUFBRSxFQUFFLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxDQUFBO1lBQzFDLENBQUM7UUFDSCxDQUFDO0lBQ0gsQ0FBQztDQUNGO0FBdENELG9DQXNDQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7SUNvbnRyb2xPcHRzfSBmcm9tICcuLi9vdXRwdXQtcGFuZWwnXG5cbmV4cG9ydCBjbGFzcyBEdW1teUVsZW1lbnQge1xuICBwcml2YXRlIGVsZW1lbnQ6IEhUTUxFbGVtZW50XG4gIGNvbnN0cnVjdG9yIChwcml2YXRlIG9wdHM6IElDb250cm9sT3B0cyAmIHtlbGVtZW50OiBIVE1MRWxlbWVudH0pIHtcbiAgICB0aGlzLmVsZW1lbnQgPSBvcHRzLmVsZW1lbnQuY2xvbmVOb2RlKHRydWUpIGFzIEhUTUxFbGVtZW50XG4gICAgdGhpcy5pbml0KClcbiAgfVxuXG4gIHB1YmxpYyB1cGRhdGUgKG9wdHM6IElDb250cm9sT3B0cyAmIHtlbGVtZW50OiBIVE1MRWxlbWVudH0pIHtcbiAgICB0aGlzLm9wdHMgPSBvcHRzXG4gICAgdGhpcy5lbGVtZW50LnJlbW92ZSgpXG4gICAgdGhpcy5lbGVtZW50ID0gb3B0cy5lbGVtZW50LmNsb25lTm9kZSh0cnVlKSBhcyBIVE1MRWxlbWVudFxuICAgIHRoaXMuaW5pdCgpXG4gIH1cblxuICBwcml2YXRlIGluaXQgKCkge1xuICAgIGNvbnN0IHtpZCwgZXZlbnRzLCBjbGFzc2VzLCBzdHlsZSwgYXR0cnN9ID0gdGhpcy5vcHRzXG4gICAgaWYgKGlkKSB7IHRoaXMuZWxlbWVudC5pZCA9IGlkIH1cbiAgICBpZiAoZXZlbnRzKSB7XG4gICAgICBmb3IgKGNvbnN0IGV2IG9mIE9iamVjdC5rZXlzKGV2ZW50cykpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LmFkZEV2ZW50TGlzdGVuZXIoZXYsIGV2ZW50c1tldl0pXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChjbGFzc2VzKSB7XG4gICAgICBmb3IgKGNvbnN0IGNscyBvZiBjbGFzc2VzKSB7XG4gICAgICAgIHRoaXMuZWxlbWVudC5jbGFzc0xpc3QuYWRkKGNscylcbiAgICAgIH1cbiAgICB9XG4gICAgaWYgKHN0eWxlKSB7XG4gICAgICBmb3IgKGNvbnN0IHN0IG9mIE9iamVjdC5rZXlzKHN0eWxlKSkge1xuICAgICAgICB0aGlzLmVsZW1lbnQuc3R5bGVbc3RdID0gc3R5bGVbc3RdXG4gICAgICB9XG4gICAgfVxuICAgIGlmIChhdHRycykge1xuICAgICAgZm9yIChjb25zdCBhdCBvZiBPYmplY3Qua2V5cyhhdHRycykpIHtcbiAgICAgICAgdGhpcy5lbGVtZW50LnNldEF0dHJpYnV0ZShhdCwgYXR0cnNbYXRdKVxuICAgICAgfVxuICAgIH1cbiAgfVxufVxuIl19